Cubescript commands:
  reloadlua : execute init.lua
  lua S : execute a piece of Lua code

System functions:
  echo(text) : print text
  getfiles(dir, [ext]) : get a list of all files in dir

Drawing functions:
  settexture(file)->(w, w) : set a texture for drawing, returns width and height in pixels

  drawquad(x, y, w, h) : draw a quad using the texture set. all parameters are percentages, eg a call drawquad(0.5, 0.5, 1, 1) draws a texture at the original size with its center aligned with the hud center (ie crosshair)
  drawquadabs(x, y, w, h) : same as above, but uses absolute values (in pixels)

  drawtext(text, x, y, scale)->(w, h) : draw text on the screen, returns width and height in pixels. all values are percentages, however this function doesn't accomodate the size of the text (text can be drawn outside the screen even if (x or y) <= 1)
  drawtextabs(text, x, y, scale)->(w, h) : same as above, but uses absolute x and y values (in pixels)
  textbounds(text)->(w, h) : returns width and height of text, in pixels

OpenGL API functions:
  glcolor(r, g, b[, a = 1]) : sets current color
  glscale(sx, sy[, sz = 1]) : scales all subsequent drawing commands (until a popmatrix)
  gltranslate(x, y[, z = 0]) : translates all subsequent drawing commands (until a popmatrix)
  glpushmatrix() : pushes the current matrix onto the stack. should be called before any functions that modify the matrix (scale, translate, rotate) with a correspoding glpopmatrix() afterwards
  glpopmatrix() : pops the matrix from the stack
  
  
Global variables:
  (rpgent)  player1 : main character (player)
  {
    (int)     etype : type of entity (ENT_CHAR), can be one of (ENT_CHAR = 0, ENT_ITEM = 1, ENT_SPELL = 2, ENT_PORTAL = 3)
    (int)     spawn : not used
    (string)  name
    (string)  description
    (float)   health
    (float)   mana
    (int)     experience
    (int)     level
    (int)     statpoints
    (int)     firstattack
    (int)     secondattack
  }
  (int)     curtime : time passed (in ms) since last frame
  (int)     lastmillis : current time (in ms)
  (int)     fps : current framerate
  (float)   screenw : width of screen (in pixels)
  (float)   screenh : height of screen (in pixels)
  (float)   hudw : width of HUD (== (screenw/screenh) * 1800)
  (float)   hudh : height of HUD (always 1800)

Game variables:
  All cubescript vars are accessible in Lua via the "game" table.
  Example: game.gamma can get or set the "gamma" var.
  Note: When modifying these values no bounds checking is applied like in Cubescript, it's your responsibility to make sure the new value is in the valid range.