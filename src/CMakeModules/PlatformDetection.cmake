# 32 or 64 bit
if(CMAKE_SIZEOF_VOID_P EQUAL 8)
    set(IBTS_TARGET_ARCH "x64")
    set(IBTS_TARGET_X64 1)
else()
    set(IBTS_TARGET_ARCH "x86")
    set(IBTS_TARGET_X86 1)
endif()

set(IBTS_TARGET_WINDOWS 0)
set(IBTS_TARGET_LINUX 0)
set(IBTS_TARGET_OSX 0)
set(IBTS_TARGET_FREEBSD 0)
set(IBTS_TARGET_SOLARIS 0)

# OS detection
if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
    set(IBTS_TARGET_OS "Windows")
    set(IBTS_TARGET_WINDOWS 1)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    set(IBTS_TARGET_OS "Linux")
    set(IBTS_TARGET_LINUX 1)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    set(IBTS_TARGET_OS "OSX")
    set(IBTS_TARGET_OSX 1)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")
    set(IBTS_TARGET_OS "FreeBSD")
    set(IBTS_TARGET_FREEBSD 1)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "SunOS")
    set(IBTS_TARGET_OS "Solaris")
    set(IBTS_TARGET_SOLARIS 1)
else()
    message(FATAL_ERROR "Unsupported OS: ${CMAKE_SYSTEM_NAME}")
endif()

# Platform libraries
if(IBTS_TARGET_WINDOWS)
    set(IBTS_PLATFORM_SRC "windows")
    set(IBTS_PLATFORM_BIN "win")
    if(IBTS_TARGET_X64)
        set(IBTS_PLATFORM_BIN ${IBTS_PLATFORM_BIN}64)
    else()
        set(IBTS_PLATFORM_BIN ${IBTS_PLATFORM_BIN}32)
    endif()
elseif(IBTS_TARGET_OSX)
    set(IBTS_PLATFORM_SRC "osx")
    set(IBTS_PLATFORM_BIN "darwin")
else()
    if(IBTS_TARGET_LINUX)
        set(IBTS_PLATFORM_SRC "linux")
        set(IBTS_PLATFORM_BIN "linux")
    elseif(IBTS_TARGET_FREEBSD)
        set(IBTS_PLATFORM_SRC "freebsd")
        set(IBTS_PLATFORM_BIN "freebsd")
    elseif(IBTS_TARGET_SOLARIS)
        set(IBTS_PLATFORM_SRC "solaris")
        set(IBTS_PLATFORM_BIN "solaris")
    endif()
endif()
